//
//  BalsameeAPIs
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"

@interface PlacesController : BaseController

/**
* Completion block definition for asynchronous call to ApiV5PlacesGet */
typedef void (^CompletedGetApiV5PlacesGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # URL         => /places
*   # Method      => GET
*   # Description => return regions of country text search with type in that country
*   #==Parameters
*   # headers['X-Authentication-Token']
*   # headers['X-Session-Id']
*   # headers['X-App-Id']
*   # params[:latitude]
*   # params[:longitude]
*   # params[:type] : clinic or hospital ... etc
*   #==Response/JSON
*   # { data: {} }, status: :ok
* @param    latitude    Required parameter: Example: 
* @param    longitude    Required parameter: Example: 
* @param    type    Required parameter: Example: 
* @param    lang    Required parameter: Example: 
*/
- (void) getApiV5PlacesGetAsyncWithLatitude:(double) latitude
                longitude:(double) longitude
                type:(NSString*) type
                lang:(NSString*) lang
                completionBlock:(CompletedGetApiV5PlacesGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5PlacesCategoriesGet */
typedef void (^CompletedGetApiV5PlacesCategoriesGet)(BOOL success, HttpContext* context, NSError* error);

/**
*   # URL         => /places/categories
*   # Method      => GET
*   # Description => return categories
*   #==Parameters
*   # headers['X-Authentication-Token']
*   # headers['X-Session-Id']
*   # headers['X-App-Id']
*   #==Response/JSON
*   # { categories: {} }, status: :ok
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5PlacesCategoriesGetAsyncWithXSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5PlacesCategoriesGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5PlacesChIJC7wXvkEWWBQRaULiE84DFEGet */
typedef void (^CompletedGetApiV5PlacesChIJC7wXvkEWWBQRaULiE84DFEGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # URL         => /places/id
*   # Method      => GET
*   # Description => get details about some place      
*   #==Parameters
*   # headers['X-Authentication-Token']
*   # headers['X-Session-Id']
*   # headers['X-App-Id']
*   # params[:id] : place id you want to get details about  
*   # params[:source] : currently g for google and f for foursquare
*   # you should add app_id
*   #==Response/JSON
*   # { data: detailed data about specified place }, status: :ok
*   # returned data consists of
*   # formatted_address  
*   # formatted_phone_number
*   # international_phone_number
*   # photo_url : photo_url
* @param    source    Required parameter: Example: 
* @param    lang    Required parameter: Example: 
*/
- (void) getApiV5PlacesChIJC7wXvkEWWBQRaULiE84DFEGetAsyncWithSource:(NSString*) source
                lang:(NSString*) lang
                completionBlock:(CompletedGetApiV5PlacesChIJC7wXvkEWWBQRaULiE84DFEGet) onCompleted;

@end