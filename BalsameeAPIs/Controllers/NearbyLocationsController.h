//
//  BalsameeAPIs
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"

@interface NearbyLocationsController : BaseController

/**
* Completion block definition for asynchronous call to ApiV5MapsGetTypeInRegionGet */
typedef void (^CompletedGetApiV5MapsGetTypeInRegionGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/get_type_in_region  
* <b>Method : </b>GET  
* <b>Description : </b>Auto-complete over the sent substring  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- type : clinic or hospital ... etc  
* 2- region_id : region code ... you got it with get_regions action in the first call to api  
* 3- country : country code ... you got it with get_regions action in the first call to api  
* 4- langauge : the langauge in which the results will come with  
* # Response/JSON :-
* { <b>data:</b> array of results for query sent }, <b>status: :ok</b>  
* <b>Every Reply in the array consists of:</b>  
* 1- formatted_address  
* 2- name  
* 3- place_id : unique identifier for that place and could be sent to get datails about that result  
* 4- latitude  
* 5- longitude  
* 6- photo_url  
* @param    type    Required parameter: Example: 
* @param    regionId    Required parameter: Example: 
* @param    country    Required parameter: Example: 
* @param    langauge    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsGetTypeInRegionGetAsyncWithType:(NSString*) type
                regionId:(NSString*) regionId
                country:(NSString*) country
                langauge:(NSString*) langauge
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsGetTypeInRegionGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsAutocompleteGet */
typedef void (^CompletedGetApiV5MapsAutocompleteGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/autocomplete  
* <b>Method : </b>GET  
* <b>Description : </b>Auto-complete over the sent substring  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- input : string you want to auto comlete  
* 2- langauge : the langauge in which the results will come with  
* 3- country : autocomplete will search through places in this cuontry  
* # Response/JSON :-
* { <b>data:</b> array of predictions for the string sent }, <b>status: :ok</b>  
* <b>Every prediction in the array consists of :</b>  
* 1- name : string value for prediction  
* 2- place_id :  unique id of a place to send it to details request  
* 3- types : types specified to the place  
* @param    input    Required parameter: Example: 
* @param    langauge    Required parameter: Example: 
* @param    country    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsAutocompleteGetAsyncWithInput:(NSString*) input
                langauge:(NSString*) langauge
                country:(NSString*) country
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsAutocompleteGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsDetailsGet */
typedef void (^CompletedGetApiV5MapsDetailsGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/details  
* <b>Method : </b>GET  
* <b>Description : </b>get details about sme place  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- id : place id you want to get details about  
* 2- source : currently g for google and f for foursquare cuontry  
* 3- app_id
* # Response/JSON :-
* { <b>data:</b> detailed data about specified place }, <b>status: :ok</b>  
* <b>returned data consists of :</b>  
* 1- formatted_address  
* 2- formatted_phone_number  
* 3- international_phone_number  
* 4- photo_url
* @param    mid    Required parameter: Example: 
* @param    source    Required parameter: Example: 
* @param    appId    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsDetailsGetAsyncWithId:(NSString*) mid
                source:(NSString*) source
                appId:(NSString*) appId
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsDetailsGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsTextSearchGet */
typedef void (^CompletedGetApiV5MapsTextSearchGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/text_search  
* <b>Method : </b>GET  
* <b>Description : </b>Auto-complete over the sent substring  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- query : the search text you want to search about  
* 2- langauge : the langauge in which the results will come with  
* # Response/JSON :-
* { <b>data:</b> array of results for query sent }, <b>status: :ok</b>  
* <b>Every Reply in the array consists of:</b>  
* 1- formatted_address  
* 2- name  
* 3- place_id : unique identifier for that place and could be sent to get datails about that result  
* 4- latitude  
* 5- longitude
* @param    query    Required parameter: Example: 
* @param    langauge    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsTextSearchGetAsyncWithQuery:(NSString*) query
                langauge:(NSString*) langauge
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsTextSearchGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsPhotoGet */
typedef void (^CompletedGetApiV5MapsPhotoGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/photo  
* <b>Method : </b>GET  
* <b>Description : </b>return photo_url of photo_reference  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- photoreference : unique identifier of photo ... usualy comes in search  
* 2- maxwidth : the width you want of the photo  
* # Response/JSON :-
* { <b>data:</b> photo_url }, <b>status: :ok</b>  
* @param    photoreference    Required parameter: Example: 
* @param    maxwidth    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsPhotoGetAsyncWithPhotoreference:(NSString*) photoreference
                maxwidth:(NSString*) maxwidth
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsPhotoGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsGetNameOfCountryGet */
typedef void (^CompletedGetApiV5MapsGetNameOfCountryGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/get_name_of_country  
* <b>Method : </b>GET  
* <b>Description : </b>return name of country  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- latitude  
* 2- longitude  
* # Response/JSON :-
* { <b>data:</b> name of country }, <b>status: :ok</b>  
* @param    latitude    Required parameter: Example: 
* @param    longitude    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsGetNameOfCountryGetAsyncWithLatitude:(NSString*) latitude
                longitude:(NSString*) longitude
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsGetNameOfCountryGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsGetRegionsOfCountryGet */
typedef void (^CompletedGetApiV5MapsGetRegionsOfCountryGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/get_regions_of_country  
* <b>Method : </b>GET  
* <b>Description : </b>return regions of country  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- latitude  
* 2- longitude  
* # Response/JSON :-
* { <b>data:</b> {} }, <b>status: :ok</b>  
* data contains hash with iso-code of country and code for each region and its name
* @param    latitude    Required parameter: Example: 
* @param    longitude    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsGetRegionsOfCountryGetAsyncWithLatitude:(NSString*) latitude
                longitude:(NSString*) longitude
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsGetRegionsOfCountryGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsGetRegionsAndPlacesInCountryGet */
typedef void (^CompletedGetApiV5MapsGetRegionsAndPlacesInCountryGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/get_regions_and_places_in_country  
* <b>Method : </b>GET  
* <b>Description : </b>return regions of country text search with type in that country  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- latitude  
* 2- longitude  
* 3- type : clinic or hospital ... etc  
* # Response/JSON :-
* { <b>data:</b> {} }, <b>status: :ok</b>  
* data is the same as get_regions + get_type_in_region
* @param    latitude    Required parameter: Example: 
* @param    longitude    Required parameter: Example: 
* @param    type    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsGetRegionsAndPlacesInCountryGetAsyncWithLatitude:(NSString*) latitude
                longitude:(NSString*) longitude
                type:(NSString*) type
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsGetRegionsAndPlacesInCountryGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsFoursquarePlcesSearchGet */
typedef void (^CompletedGetApiV5MapsFoursquarePlcesSearchGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/foursquare_plces_search  
* <b>Method : </b>GET  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- latitude  
* 2- longitude  
* 3- type : clinic or hospital ... etc  
* # Response/JSON :-
* { <b>data:</b> array of results for query sent }, <b>status: :ok</b>  
* <b>Every Reply in the array consists of:</b>  
* 1- formatted_address  
* 2- name  
* 3- place_id : unique identifier for that place and could be sent to get datails about that result  
* 4- latitude  
* 5- longitude  
* 6- photo_url  
* @param    latitude    Required parameter: Example: 
* @param    longitude    Required parameter: Example: 
* @param    type    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsFoursquarePlcesSearchGetAsyncWithLatitude:(NSString*) latitude
                longitude:(NSString*) longitude
                type:(NSString*) type
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsFoursquarePlcesSearchGet) onCompleted;

/**
* Completion block definition for asynchronous call to ApiV5MapsGetFoursquarePhotoUrlGet */
typedef void (^CompletedGetApiV5MapsGetFoursquarePhotoUrlGet)(BOOL success, HttpContext* context, NSError* error);

/**
* # Specifications :-
* <b>URL : </b>/maps/get_foursquare_photo_url  
* <b>Method : </b>GET  
* <b>Description : </b>return photo_url of photo_reference  
* # Parameters :-
* <b>Headers :</b>  
* 1- X-Authentication-Token  
* 2- X-Session-Id  
* 3- X-App-Id : should be sent only when using doctor app  
* <b>Params :</b>  
* 1- place_id : place id you want to get details about  
* # Response/JSON :-
* { <b>data:</b> photo_url }, <b>status: :ok</b>  
* @param    placeId    Required parameter: Example: 
* @param    xSessionId    Required parameter: Example: 
* @param    xAuthenticationToken    Required parameter: Example: 
* @param    xAppId    Required parameter: Example: 
*/
- (void) getApiV5MapsGetFoursquarePhotoUrlGetAsyncWithPlaceId:(NSString*) placeId
                xSessionId:(NSString*) xSessionId
                xAuthenticationToken:(NSString*) xAuthenticationToken
                xAppId:(NSString*) xAppId
                completionBlock:(CompletedGetApiV5MapsGetFoursquarePhotoUrlGet) onCompleted;

@end